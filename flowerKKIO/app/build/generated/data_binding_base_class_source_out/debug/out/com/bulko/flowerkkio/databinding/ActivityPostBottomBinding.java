// Generated by view binder compiler. Do not edit!
package com.bulko.flowerkkio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bulko.flowerkkio.R;
import com.google.android.material.bottomappbar.BottomAppBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostBottomBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final ImageView bookmarkButton;

  @NonNull
  public final TextView bookmarkCount;

  @NonNull
  public final LinearLayout bookmarkLayout;

  @NonNull
  public final ImageView commentButton;

  @NonNull
  public final TextView commentCount;

  @NonNull
  public final LinearLayout commentLayout;

  @NonNull
  public final ImageView likeButton;

  @NonNull
  public final TextView likeCount;

  @NonNull
  public final LinearLayout likeLayout;

  @NonNull
  public final ImageView plantInfo;

  @NonNull
  public final LinearLayout plantInfoLayout;

  @NonNull
  public final BottomAppBar postBottomBar;

  private ActivityPostBottomBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backButton, @NonNull ImageView bookmarkButton,
      @NonNull TextView bookmarkCount, @NonNull LinearLayout bookmarkLayout,
      @NonNull ImageView commentButton, @NonNull TextView commentCount,
      @NonNull LinearLayout commentLayout, @NonNull ImageView likeButton,
      @NonNull TextView likeCount, @NonNull LinearLayout likeLayout, @NonNull ImageView plantInfo,
      @NonNull LinearLayout plantInfoLayout, @NonNull BottomAppBar postBottomBar) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bookmarkButton = bookmarkButton;
    this.bookmarkCount = bookmarkCount;
    this.bookmarkLayout = bookmarkLayout;
    this.commentButton = commentButton;
    this.commentCount = commentCount;
    this.commentLayout = commentLayout;
    this.likeButton = likeButton;
    this.likeCount = likeCount;
    this.likeLayout = likeLayout;
    this.plantInfo = plantInfo;
    this.plantInfoLayout = plantInfoLayout;
    this.postBottomBar = postBottomBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostBottomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostBottomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_bottom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostBottomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bookmark_button;
      ImageView bookmarkButton = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkButton == null) {
        break missingId;
      }

      id = R.id.bookmark_count;
      TextView bookmarkCount = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkCount == null) {
        break missingId;
      }

      id = R.id.bookmark_layout;
      LinearLayout bookmarkLayout = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkLayout == null) {
        break missingId;
      }

      id = R.id.comment_button;
      ImageView commentButton = ViewBindings.findChildViewById(rootView, id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.comment_count;
      TextView commentCount = ViewBindings.findChildViewById(rootView, id);
      if (commentCount == null) {
        break missingId;
      }

      id = R.id.comment_layout;
      LinearLayout commentLayout = ViewBindings.findChildViewById(rootView, id);
      if (commentLayout == null) {
        break missingId;
      }

      id = R.id.like_button;
      ImageView likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.like_count;
      TextView likeCount = ViewBindings.findChildViewById(rootView, id);
      if (likeCount == null) {
        break missingId;
      }

      id = R.id.like_layout;
      LinearLayout likeLayout = ViewBindings.findChildViewById(rootView, id);
      if (likeLayout == null) {
        break missingId;
      }

      id = R.id.plant_info;
      ImageView plantInfo = ViewBindings.findChildViewById(rootView, id);
      if (plantInfo == null) {
        break missingId;
      }

      id = R.id.plant_info_layout;
      LinearLayout plantInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (plantInfoLayout == null) {
        break missingId;
      }

      id = R.id.post_bottom_bar;
      BottomAppBar postBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (postBottomBar == null) {
        break missingId;
      }

      return new ActivityPostBottomBinding((ConstraintLayout) rootView, backButton, bookmarkButton,
          bookmarkCount, bookmarkLayout, commentButton, commentCount, commentLayout, likeButton,
          likeCount, likeLayout, plantInfo, plantInfoLayout, postBottomBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
